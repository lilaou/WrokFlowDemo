<?xml version="1.0" encoding="utf-8"?>
<fd:Workflow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:fd="clr-namespace:FlowchartWorkflow.Draft_Approval_Workflow;assembly=FlowchartWorkflow" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:p1="wf://workflow.windows.net/$Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>FlowchartWorkflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <fd:Workflow.Implementation>
    <Sequence DisplayName="Root">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="EditorId" />
        <Variable x:TypeArguments="x:String" Name="ReviewerId" />
        <Variable x:TypeArguments="x:Int32" Name="AuthorId" />
        <Variable x:TypeArguments="x:Boolean" Name="DraftDocumentApproved" />
      </Sequence.Variables>
      <Sequence DisplayName="Init">
        <Sequence.Variables>
          <Variable x:TypeArguments="p:DynamicValue" Name="DraftItemProperties" />
        </Sequence.Variables>
        <p:SetUserStatus Description="Collecting Document Reviewer and Editor" />
        <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}">
          <p1:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                <p1:GetCurrentItemId />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ItemId>
          <p1:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                <p1:GetCurrentListId />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ListId>
          <p1:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">DraftItemProperties</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItem.Result>
        </p1:LookupSPListItem>
        <p:GetODataProperties DisplayName="GetDynamicValueProperties">
          <p:GetODataProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">DraftItemProperties</mca:CSharpValue>
            </InArgument>
          </p:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="ReviewerId">
              <mca:CSharpReference x:TypeArguments="x:String">ReviewerId</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Editor1Id">
              <mca:CSharpReference x:TypeArguments="x:String">EditorId</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:Int32" x:Key="AuthorId">
              <mca:CSharpReference x:TypeArguments="x:Int32">AuthorId</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetODataProperties>
        <WriteLine DisplayName="DEBUG: ReviewerId">
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">"ReviewerId = " +ReviewerId</mca:CSharpValue>
          </InArgument>
        </WriteLine>
        <WriteLine DisplayName="DEBUG: EditorId">
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">"EditorId = " + EditorId</mca:CSharpValue>
          </InArgument>
        </WriteLine>
      </Sequence>
      <Flowchart DisplayName="Document Review">
        <Flowchart.Variables>
          <Variable x:TypeArguments="x:Int32" Name="ReviewerTaskOutcome" />
          <Variable x:TypeArguments="x:Int32" Name="AuthorTaskOutcome" />
          <Variable x:TypeArguments="x:Int32" Name="EditorTaskOutcome" />
        </Flowchart.Variables>
        <Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID1">
            <p:SetUserStatus Description="Document Under Review" />
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID0">
                <Sequence DisplayName="Reviewer Review">
                  <p1:WriteToHistory Message="Assigning task to reviewer to check document..." />
                  <p1:SingleTask DueDate="{x:Null}" TaskId="{x:Null}" TaskItemId="{x:Null}" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;A draft document has been submitted for the manuscript. Please review the document and either APPROVE (if the document is ok to proceed to the editor) or REJECT (if the document should be send back to the author for edits.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned: Draft Document Review for Manuscript" Body="A draft document has been submitted for the manuscript. Please review the document and either APPROVE (if the document is ok to proceed to the editor) or REJECT (if the document should be send back to the author for edits." CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;The following task has been CANCELLED: A draft document has been submitted for the manuscript. Please review the document and either APPROVE (if the document is ok to proceed to the editor) or REJECT (if the document should be send back to the author for edits.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Cancelled: Draft Document Review for Manuscript" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="0" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;The following task is OVERDUE: A draft document has been submitted for the manuscript. Please review the document and either APPROVE (if the document is ok to proceed to the editor) or REJECT (if the document should be send back to the author for edits.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue: Draft Document Review for Manuscript" OverdueReminderRepeat="1" OverdueRepeatTimes="1" SendReminderEmail="False" Title="Draft Document Submitted for Review" WaitForTaskCompletion="True">
                    <p1:SingleTask.AssignedTo>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">ReviewerId</mca:CSharpValue>
                      </InArgument>
                    </p1:SingleTask.AssignedTo>
                    <p1:SingleTask.Outcome>
                      <OutArgument x:TypeArguments="x:Int32">
                        <mca:CSharpReference x:TypeArguments="x:Int32">ReviewerTaskOutcome</mca:CSharpReference>
                      </OutArgument>
                    </p1:SingleTask.Outcome>
                    <p1:SingleTask.RelatedContentLinkListId>
                      <InArgument x:TypeArguments="s:Guid">
                        <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                          <p1:GetCurrentListId />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:SingleTask.RelatedContentLinkListId>
                    <p1:SingleTask.RelatedContentLinkListItemId>
                      <InArgument x:TypeArguments="s:Guid">
                        <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                          <p1:GetCurrentItemGuid />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:SingleTask.RelatedContentLinkListItemId>
                    <p1:SingleTask.RelatedContentLinkListItemIntegerId>
                      <InArgument x:TypeArguments="x:Int32">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                          <p1:GetCurrentItemId />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:SingleTask.RelatedContentLinkListItemIntegerId>
                  </p1:SingleTask>
                </Sequence>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID2" DisplayName="OK to Proceed?">
                    <FlowDecision.Condition>
                      <mca:CSharpValue x:TypeArguments="x:Boolean">ReviewerTaskOutcome==0</mca:CSharpValue>
                    </FlowDecision.Condition>
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID4">
                        <Sequence DisplayName="Send Document To Editor">
                          <p:SetUserStatus Description="Editor Reviewing Document" />
                          <p1:WriteToHistory Message="Editor currently reviewing the document..." />
                          <p1:SingleTask DueDate="{x:Null}" TaskId="{x:Null}" TaskItemId="{x:Null}" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned" Body="A document has been approved by a reviewer and submitted for publication. Please review and either APPROVE or REJECT the publication request." CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="0" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue" OverdueReminderRepeat="1" OverdueRepeatTimes="1" SendReminderEmail="False" Title="Document Submitted For Publication" WaitForTaskCompletion="True">
                            <p1:SingleTask.AssignedTo>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">EditorId</mca:CSharpValue>
                              </InArgument>
                            </p1:SingleTask.AssignedTo>
                            <p1:SingleTask.Outcome>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">EditorTaskOutcome</mca:CSharpReference>
                              </OutArgument>
                            </p1:SingleTask.Outcome>
                            <p1:SingleTask.RelatedContentLinkListId>
                              <InArgument x:TypeArguments="s:Guid">
                                <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                  <p1:GetCurrentListId />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:SingleTask.RelatedContentLinkListId>
                            <p1:SingleTask.RelatedContentLinkListItemId>
                              <InArgument x:TypeArguments="s:Guid">
                                <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                  <p1:GetCurrentItemGuid />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:SingleTask.RelatedContentLinkListItemId>
                            <p1:SingleTask.RelatedContentLinkListItemIntegerId>
                              <InArgument x:TypeArguments="x:Int32">
                                <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                  <p1:GetCurrentItemId />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:SingleTask.RelatedContentLinkListItemIntegerId>
                          </p1:SingleTask>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID5">
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpReference x:TypeArguments="x:Boolean">DraftDocumentApproved</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">EditorTaskOutcome==0</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID3">
                        <Sequence DisplayName="Send Document Back to Author">
                          <p:SetUserStatus Description="Author Addressing Reviewer Feedback" />
                          <p1:WriteToHistory Message="Document REJECTED by Reviewer; Sent back to Author for Edits" />
                          <p1:SingleTask DueDate="{x:Null}" TaskId="{x:Null}" TaskItemId="{x:Null}" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned" Body="The document you submitted for review was rejected by the reviewer. Please address the reviewer's feedback and resubmit by completing and approving your task." CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="0" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue" OverdueReminderRepeat="1" OverdueRepeatTimes="1" SendReminderEmail="False" Title="Address Reviewer Feedback" WaitForTaskCompletion="True">
                            <p1:SingleTask.AssignedTo>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">AuthorId.ToString()</mca:CSharpValue>
                              </InArgument>
                            </p1:SingleTask.AssignedTo>
                            <p1:SingleTask.Outcome>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">AuthorTaskOutcome</mca:CSharpReference>
                              </OutArgument>
                            </p1:SingleTask.Outcome>
                            <p1:SingleTask.RelatedContentLinkListId>
                              <InArgument x:TypeArguments="s:Guid">
                                <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                  <p1:GetCurrentListId />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:SingleTask.RelatedContentLinkListId>
                            <p1:SingleTask.RelatedContentLinkListItemId>
                              <InArgument x:TypeArguments="s:Guid">
                                <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                  <p1:GetCurrentItemGuid />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:SingleTask.RelatedContentLinkListItemId>
                            <p1:SingleTask.RelatedContentLinkListItemIntegerId>
                              <InArgument x:TypeArguments="x:Int32">
                                <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                  <p1:GetCurrentItemId />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:SingleTask.RelatedContentLinkListItemIntegerId>
                          </p1:SingleTask>
                        </Sequence>
                        <FlowStep.Next>
                          <x:Reference>__ReferenceID0</x:Reference>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </Flowchart.StartNode>
        <x:Reference>__ReferenceID1</x:Reference>
        <x:Reference>__ReferenceID0</x:Reference>
        <x:Reference>__ReferenceID2</x:Reference>
        <x:Reference>__ReferenceID3</x:Reference>
        <x:Reference>__ReferenceID4</x:Reference>
        <x:Reference>__ReferenceID5</x:Reference>
      </Flowchart>
      <If DisplayName="Publish of Editor Approved; Else Terminate">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">DraftDocumentApproved</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <Sequence DisplayName="Draft Approved, Publish">
            <p:SetUserStatus Description="Publishing Draft Document" />
            <p1:WriteToHistory Message="Draft document approved for publication, copying to Manuscript library" />
            <p1:CopyItem ItemGuid="{x:Null}" Overwrite="True">
              <p1:CopyItem.ItemId>
                <InArgument x:TypeArguments="x:Int32">
                  <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                    <p1:GetCurrentItemId />
                  </p:ExpressionContainerValue>
                </InArgument>
              </p1:CopyItem.ItemId>
              <p1:CopyItem.ListId>
                <InArgument x:TypeArguments="s:Guid">
                  <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                    <p1:GetCurrentListId />
                  </p:ExpressionContainerValue>
                </InArgument>
              </p1:CopyItem.ListId>
              <p1:CopyItem.ToListId>
                <InArgument x:TypeArguments="s:Guid">
                  <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Manuscripts;}")</mca:CSharpValue>
                </InArgument>
              </p1:CopyItem.ToListId>
            </p1:CopyItem>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Draft Rejected, End Review">
            <p1:WriteToHistory Message="Draft document rejected for publication" />
          </Sequence>
        </If.Else>
      </If>
      <p:SetUserStatus Description="Workflow Complete" />
      <sads:DebugSymbol.Symbol>dzxjOlxEZXZcRmxvd2NoYXJ0V29ya2Zsb3dcRHJhZnRBcHByb3ZhbFdvcmtmbG93XFdvcmtmbG93LnhhbWyFASwDuQIOAgEBMwVpEAMBsAFqBY8CEQIBG5ACBbYCCgIBBLcCBbcCagIBAjcHN4IBAwHhATgHTB0DAdgBTQdeHgMBvwFfB2MTAwG4AWQHaBMDAbEBcgtydAMBrgF1D5gBGgMBhwGcARWcAWoCAX/ZARf9ASICAVagARfEASICAS3HARvSASQCARyTAguTAl8CAQWXAgmvAhQCAQ2yAgm0AhQCAQq3AiK3AjUCAQM3JDdNAwHiAUINRCoDAeABSQ1JbAMB2gE7DT0qAwHZAVANUGQDAdIBWw1bWgMBzAFVDVVdAwHGAVgNWFsDAcABYQthZAMBuQFmC2ZhAwGyAXIocj8DAa8BdhF2kwEDAawBdxGXASEDAYgB2gEZ2gGQAQIBfdsBGdsBqAECAXvcARn8ASkCAVehARmhAYYBAgFUogEZogGWAQIBUqMBGcMBKQIBLs8BIc8BdAIBJcoBIcoBfQIBHZgCC5gCeAIBGZkCC5kCpAECAReaAguuAhkCAQ6zAguzAoUBAgELQw9DJgQB4AEBPA88JgQB2QEBdl92kAEDAa0Bd293lgQDAasBd6kMd7YMAwGqAXeFEXeIEQMBqQF33wZ3rQoDAagBhAEXhgE0AwGnAXflC3foCwMBpgF36QR3yQYDAaUBfxd/bwMBnQF3jQt3mAsDAZwBd5sRd6IRAwGbAYsBF40BNAMBmgF3oxB31xADAZkBkgEXlAE0AwGYAXepEXfOEQMBlwF3yAx3jhADAZYBd6cLd9ELAwGVAXoXel8DAY0Bd+URd+sRAwGMAXeuBHfjBAMBiwF3xgp3/AoDAYoBd+4Qd/EQAwGJAdoBNtoBWwIBftsBZ9sBpQECAXzcAXfcAdQCAgF63AG5CNwBxggCAXncAf4L3AGBDAIBeNwBtwTcAeQGAgF36QEf6wE8AgF23AH1B9wB+AcCAXXcAYED3AGhBAIBdOQBH+QBdQIBbNwBnQfcAagHAgFr3AGUDNwBmwwCAWrwAR/yATwCAWncAcIL3AHQCwIBaPcBH/kBPAIBZ9wBogzcAb0MAgFm3AHYCNwBrQsCAWXcAbcH3AHhBwIBZN8BH98BcAIBXNwB1AzcAdoMAgFb3AHsAtwB+wICAVrcAf0G3AGMBwIBWdwB5wvcAeoLAgFYoQE2oQFRAgFVogFnogGTAQIBU6MBd6MB1AICAVGjAagIowG1CAIBUKMB7QujAfALAgFPowGmBKMB0wYCAU6wAR+yATwCAU2jAeQHowHnBwIBTKMBgQOjAZAEAgFLqwEfqwF1AgFDowGMB6MBlwcCAUKjAYMMowGKDAIBQbcBH7kBPAIBQKMBsQujAb8LAgE/vgEfwAE8AgE+owGRDKMBtQwCAT2jAccIowGcCwIBPKMBpgejAdAHAgE7pgEfpgFlAgEzowHMDKMB0gwCATKjAewCowH7AgIBMaMB7AajAfsGAgEwowHWC6MB2QsCAS+YAiiYAkMCARqZAlmZAqEBAgEYmgJjmgJpAgEWpAIRpgIuAgEVqwIRqwJ+AgEQnQIRnwIuAgEPswJZswKCAQIBDIUBGYUBMAQBpwEBjAEZjAEyBAGaAQGTARmTATAEAZgBAeoBIeoBOAMBdgHxASHxAToDAWkB+AEh+AE4AwFnAbEBIbEBOAMBTQG4ASG4AToDAUABvwEhvwE4AwE+AaUCE6UCKgMBFQGeAhOeAioDAQ8B</sads:DebugSymbol.Symbol>
    </Sequence>
  </fd:Workflow.Implementation>
</fd:Workflow>